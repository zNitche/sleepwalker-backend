openapi: 3.0.3
info:
  title: Sleepwalker API
  version: 1.0.0
paths:
  /api/auth-check/:
    get:
      operationId: auth_check_retrieve
      tags:
      - auth-check
      responses:
        '200':
          description: No response body
  /api/auth/api-key/:
    get:
      operationId: auth_api_key_retrieve
      tags:
      - auth
      responses:
        '200':
          description: No response body
    post:
      operationId: auth_api_key_create
      tags:
      - auth
      responses:
        '200':
          description: No response body
  /api/auth/login/:
    post:
      operationId: auth_login_create
      tags:
      - auth
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/auth/logout/:
    post:
      operationId: auth_logout_create
      tags:
      - auth
      responses:
        '200':
          description: No response body
  /api/health-check/:
    get:
      operationId: health_check_retrieve
      tags:
      - health-check
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/sessions/:
    get:
      operationId: sessions_retrieve
      tags:
      - sessions
      responses:
        '200':
          description: No response body
  /api/sessions/{session_uuid}/:
    get:
      operationId: sessions_retrieve_2
      parameters:
      - in: path
        name: session_uuid
        schema:
          type: string
        required: true
      tags:
      - sessions
      responses:
        '200':
          description: No response body
  /api/sessions/{session_uuid}/body-sensors/:
    get:
      operationId: sessions_body_sensors_retrieve
      parameters:
      - in: path
        name: session_uuid
        schema:
          type: string
        required: true
      tags:
      - sessions
      responses:
        '200':
          description: No response body
  /api/sessions/{session_uuid}/body-sensors/add/:
    post:
      operationId: sessions_body_sensors_add_create
      parameters:
      - in: path
        name: session_uuid
        schema:
          type: string
        required: true
      tags:
      - sessions
      responses:
        '200':
          description: No response body
  /api/sessions/{session_uuid}/close/:
    post:
      operationId: sessions_close_create
      parameters:
      - in: path
        name: session_uuid
        schema:
          type: string
        required: true
      tags:
      - sessions
      responses:
        '200':
          description: No response body
  /api/sessions/{session_uuid}/environment-sensors/:
    get:
      operationId: sessions_environment_sensors_retrieve
      parameters:
      - in: path
        name: session_uuid
        schema:
          type: string
        required: true
      tags:
      - sessions
      responses:
        '200':
          description: No response body
  /api/sessions/{session_uuid}/environment-sensors/add/:
    post:
      operationId: sessions_environment_sensors_add_create
      parameters:
      - in: path
        name: session_uuid
        schema:
          type: string
        required: true
      tags:
      - sessions
      responses:
        '200':
          description: No response body
  /api/sessions/{session_uuid}/remove/:
    delete:
      operationId: sessions_remove_destroy
      parameters:
      - in: path
        name: session_uuid
        schema:
          type: string
        required: true
      tags:
      - sessions
      responses:
        '204':
          description: No response body
  /api/sessions/init/:
    post:
      operationId: sessions_init_create
      tags:
      - sessions
      responses:
        '200':
          description: No response body
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
