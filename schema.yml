openapi: 3.0.3
info:
  title: Sleepwalker API
  version: 1.0.0
paths:
  /api/auth-check/:
    get:
      operationId: auth_check
      description: Auth check
      tags:
      - core
      security:
      - ApiKeyAuth: []
      - TokenAuth: []
      responses:
        '200':
          description: No response body
        '401':
          description: No response body
  /api/auth/api-key/:
    get:
      operationId: auth_get_api_key
      description: Get API Key
      tags:
      - auth
      security:
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserApiKey'
          description: ''
        '401':
          description: No response body
    post:
      operationId: auth_create_api_key
      description: Create API Key
      tags:
      - auth
      security:
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserApiKey'
          description: ''
        '401':
          description: No response body
  /api/auth/login/:
    post:
      operationId: auth_login
      description: Login
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
  /api/auth/logout/:
    post:
      operationId: auth_logout
      description: Logout
      tags:
      - auth
      security:
      - TokenAuth: []
      responses:
        '200':
          description: No response body
        '401':
          description: No response body
  /api/event-detected/:
    get:
      operationId: event_detected
      description: Sleepwalking event detected
      tags:
      - core
      security:
      - ApiKeyAuth: []
      - TokenAuth: []
      responses:
        '200':
          description: No response body
        '404':
          description: No response body
        '401':
          description: No response body
  /api/health-check/:
    get:
      operationId: health_check
      description: Health check
      tags:
      - core
      security:
      - {}
      responses:
        '200':
          description: No response body
  /api/sessions/:
    get:
      operationId: get_logs_sessions
      description: Get logs sessions
      tags:
      - logs_sessions
      security:
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LogsSession'
          description: ''
        '401':
          description: No response body
  /api/sessions/{session_uuid}/:
    get:
      operationId: get_logs_session
      description: get logs session by id
      parameters:
      - in: path
        name: session_uuid
        schema:
          type: string
        required: true
      tags:
      - logs_sessions
      security:
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsSession'
          description: ''
        '401':
          description: No response body
        '404':
          description: No response body
  /api/sessions/{session_uuid}/body-sensors/:
    get:
      operationId: body_sensors_logs
      description: get body sensor logs for session
      parameters:
      - in: path
        name: session_uuid
        schema:
          type: string
        required: true
      tags:
      - body_sensors_logs
      security:
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BodySensorsLogs'
          description: ''
        '401':
          description: No response body
        '404':
          description: No response body
  /api/sessions/{session_uuid}/body-sensors/add/:
    post:
      operationId: create_body_sensors_log
      description: create body sensor logs for session
      parameters:
      - in: path
        name: session_uuid
        schema:
          type: string
        required: true
      tags:
      - body_sensors_logs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BodySensorsLogs'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BodySensorsLogs'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BodySensorsLogs'
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BodySensorsLogs'
          description: ''
        '401':
          description: No response body
        '404':
          description: No response body
  /api/sessions/{session_uuid}/close/:
    post:
      operationId: close_logs_session
      description: close logs session by id
      parameters:
      - in: path
        name: session_uuid
        schema:
          type: string
        required: true
      tags:
      - logs_sessions
      security:
      - ApiKeyAuth: []
      - TokenAuth: []
      responses:
        '200':
          description: No response body
        '401':
          description: No response body
        '404':
          description: No response body
  /api/sessions/{session_uuid}/environment-sensors/:
    get:
      operationId: environment_sensors_logs
      description: get environment sensor logs for session
      parameters:
      - in: path
        name: session_uuid
        schema:
          type: string
        required: true
      tags:
      - environment_sensors_logs
      security:
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnvironmentSensorsLogs'
          description: ''
        '401':
          description: No response body
        '404':
          description: No response body
  /api/sessions/{session_uuid}/environment-sensors/add/:
    post:
      operationId: create_environment_sensors_log
      description: create environment sensor logs for session
      parameters:
      - in: path
        name: session_uuid
        schema:
          type: string
        required: true
      tags:
      - environment_sensors_logs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentSensorsLogs'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EnvironmentSensorsLogs'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EnvironmentSensorsLogs'
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentSensorsLogs'
          description: ''
        '401':
          description: No response body
        '404':
          description: No response body
  /api/sessions/{session_uuid}/remove/:
    delete:
      operationId: delete_logs_session
      description: delete logs session by id
      parameters:
      - in: path
        name: session_uuid
        schema:
          type: string
        required: true
      tags:
      - logs_sessions
      security:
      - TokenAuth: []
      responses:
        '200':
          description: No response body
        '401':
          description: No response body
        '404':
          description: No response body
  /api/sessions/current/:
    get:
      operationId: latest_running_logs_session
      description: get latest running logs session for user
      tags:
      - logs_sessions
      security:
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsSession'
          description: ''
        '401':
          description: No response body
        '404':
          description: No response body
  /api/sessions/init/:
    post:
      operationId: create_logs_session
      description: Create logs sessions
      tags:
      - logs_sessions
      security:
      - ApiKeyAuth: []
      responses:
        '200':
          description: No response body
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsSession'
          description: ''
  /api/sessions/reset-current-session/:
    post:
      operationId: reset_current_logs_session
      description: reset current logs session
      tags:
      - logs_sessions
      security:
      - ApiKeyAuth: []
      - TokenAuth: []
      responses:
        '200':
          description: No response body
        '401':
          description: No response body
        '404':
          description: No response body
  /api/sessions/statistics/:
    get:
      operationId: logs_sessions_statistics
      description: Get statistics for logs sessions
      tags:
      - logs_sessions
      security:
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Statistics'
          description: ''
  /api/user/settings/:
    get:
      operationId: user_settings_retrieve
      description: Get user settings
      tags:
      - user
      security:
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSettings'
          description: ''
        '401':
          description: No response body
    put:
      operationId: user_settings_update
      description: Update user settings
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSettings'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserSettings'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserSettings'
      security:
      - TokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSettings'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
        '401':
          description: No response body
components:
  schemas:
    AuthToken:
      type: object
      properties:
        token:
          type: string
      required:
      - token
    BodySensorsLogs:
      type: object
      properties:
        date:
          type: string
          format: date-time
          readOnly: true
        heart_beat:
          type: number
          format: double
        acceleration_x:
          type: number
          format: double
        acceleration_y:
          type: number
          format: double
        acceleration_z:
          type: number
          format: double
      required:
      - date
    EnvironmentSensorsLogs:
      type: object
      properties:
        date:
          type: string
          format: date-time
          readOnly: true
        temperature:
          type: number
          format: double
        humidity:
          type: number
          format: double
      required:
      - date
    Login:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
      - password
      - username
    LogsSession:
      type: object
      properties:
        uuid:
          type: string
          readOnly: true
        start_date:
          type: string
          format: date-time
          readOnly: true
        end_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - end_date
      - start_date
      - uuid
    Statistics:
      type: object
      properties:
        first_session_start_date:
          type: string
          format: date-time
        last_session_start_date:
          type: string
          format: date-time
        first_session_end_date:
          type: string
          format: date-time
        last_session_end_date:
          type: string
          format: date-time
        logs_sessions:
          type: integer
        sleepwalking_events:
          type: object
          additionalProperties: {}
        sleepwalking_events_count:
          type: integer
      required:
      - first_session_end_date
      - first_session_start_date
      - last_session_end_date
      - last_session_start_date
      - logs_sessions
      - sleepwalking_events
      - sleepwalking_events_count
    UserApiKey:
      type: object
      properties:
        api_key:
          type: string
          nullable: true
          maxLength: 16
    UserSettings:
      type: object
      properties:
        sw_detection_heart_beat_percentage_threshold:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: API-KEY
      description: api key
    TokenAuth:
      type: apiKey
      in: header
      name: AUTH-TOKEN
      description: Auth Token obtained from login process
servers:
- url: http://127.0.0.1:8000/
  description: dev
tags:
- auth
- user
- core
- logs_sessions
- body_sensors_logs
- environment_sensors_logs
